https://www.guvi.in/ide

Code Keta Link: https://www.guvi.in/code-kata

>>>>>>>>>>>>>>>>>>Template>>>>>>>>>>>>>>>>
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});


inp.on("line", (data) => {
    
    // Input data process here
    
});

inp.on("close", () => {

    // Output data process here

});
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
------------------------------------------------------------------------------------------------
Day 1
------------------------------------------------------------------------------------------------

1. Variable
2. Data Types
3. Conditions
4. Looping
5. Output Statement


1. Variable

var => Can be Reassign & Can be Redeclaration
let => Can be Reassign & Can't Redeclaration
const => Can't Reassign & Can't Redeclaration

Set of rules of the variable name

a. Only alphabets, numbers,  $ and _ 
b. We can't start a variable name as number
c. Variable name is case sensitive

let a = 20;

let A = 40;



2. Data Type

String
Number
Boolean
Undefined
Object

Number + Number => Number
    
Number + String => String

String + Number => String

String + String => String

Number + Boolean => Number

String + Boolean => String

Number - Number => Number

String - String => Number

Number - Boolean => Number

String - Boolean => Number


3. Condition

a. If Statement
b. If Else Statement
c. Nested If Condtion

if (condition) {

 // Statement

}


if (condition) {

 // Statement

} else {

 // Statement

}


if (condition) {

 // Statement

} else if (condition) {

 // Statement

} else {

 // Statement

}

Trinary Operation

condition? statement 1 : statement 2

age > 18? "Eligible" : "Not Eligible"


"40" == 40 => true

"40" === 40 => false

"40" === "40" => true


>>>>>>>>>>>>Nested If Example>>>>>>>>>>>>>>>>


// 90 - 100 => S
    
    // 80 - 89 => A
    
    // 70 - 79 => B
    
    // 60 - 69 => C
    
    // 50 - 59 => D
    
    // 45 - 49 => E
    
    // < 45 => U
    
    if (mark > 100 || mark < 0) {
        
        console.log("Your mark is invalid")
        
    } else if (mark >= 90 && mark <= 100) {
        
        console.log("S");
        
    } else if (mark >= 80 && mark <= 89) {
        
        console.log("A")
        
    } else if (mark >= 70 && mark <= 79) {
        
        console.log("B")
        
    } else if (mark >= 60 && mark <= 69) {
        
        console.log("C")
        
    } else if (mark >= 50 && mark <= 59) {
        
        console.log("D")
        
    } else if (mark >= 45 && mark <= 49) {
        
        console.log("E")
        
    } else {
        
        console.log("U")
        
    }
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


Array

- Group of Elements

- Push, Pop, Length => Splice

>>>>>>>>>>>>>>>>>>Variable>>>>>>>>>>>>>>>>>>

var => Can Reassign || Can Redeclare
let => Can Reassign || Can't Redeclare
const => Can't Reassign || Can't Redeclare

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

>>>>>>>>>>>>>> Example >>>>>>>>>>>>>>>>>>>>>

1 + 1 => 2 // Number
    
"a" + "b" => "ab" // String
    
1 + "a" => "1a" // String
    
"1" + "1" => "11" // String
    
"1" + 1 => "11" // String
    
1 - 1 => 0 // Number
    
"a" - "b" => NaN // Number
    
1 - "a" => NaN // Number
    
"1" - "1" => 0 // Number
    
"1" - 1 => 0 // Number
    
"1a" - "a" => NaN // Number
    
"2a" - "1a" => NaN // Number

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

>>>>>>>>>>>>>>>>>>Exercise 1>>>>>>>>>>>>>>>>>>>

1 + "1" + 1 - 1 + 1 - "1" + 11

"11" + 1 - 1 + 1 - "1" + 11

"111" - 1 + 1 - "1" + 11

110 + 1 - "1" + 11

111 - "1" + 11

110 + 11

121

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


>>>>>>>>>>>>>>>>Exercise Task >>>>>>>>>>>>>>>>>>>>>>>>>>

1 => Splice

2 => If Condition, If Else, Nested IF      

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Array Methods in JavaScript => 

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array

String Methods in JavaScript => 

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String

Splice Method => 

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice

------------------------------------------------------------------------------------------------
Day 2
------------------------------------------------------------------------------------------------

Looping

a. For Loop
b. while
c. do while
d. switch statement


Type Casting

One data type to another data type

Number -> String => Number(value)

Example: 

Number("200") => 200
+"200" => 200
-"200" => -200
Number("asda") => NaN // Not a Number

String -> Number => String(value)

Example: 

String(200) => "200"


For Loop

for (initialization; condition; updation) {

  // Statement

}

let i = 0;

for (i = 0; i < 3; i++) {

  console.log(i);

}

// 0 1 2

let fruits = ["Apple", "Orange", "Mango"];

for (i = 0; i < fruits.length; i++) {

  console.log(fruits[i]);

}


While

while (condition) {

	// statement
  
}

let i = 0;

while (i < 3) {

  console.log(i);
  i++;

}

// 0 1 2

do while
  
  do {
  
    // statement
  
  } while (condition)
    
  let i = 0;

  do {
  
    console.log(i)
  
  } while (i < 3)

// 0 1 2
    
Switch

	switch (action) {
    
      case 'action1':
        // statement
        break;
      case 'action1':
        // statement
        break;
      default:
        break;
    
    }

	let a = 1;
	let b = 1;
	let sum = 0;
	let action = "+";

	switch (action) {
    
      case '+':
        sum = a + b
    	break;
      case '-':
        sum = a - b
    	break;
      case '*':
        sum = a * b
    	break;
      case '/':
        sum = a / b
    	break;
      default:
        sum = 0;
        break;
    
    }
	console.log(sum)

Self Assesment:
 
1. Some example implementation for loop, while loop, do while and switch
2. Show the sum of odd numbers from 0 -> 10
3. Input guvi => ivug
   a. Normal for loop
   b. split, reverse, join
   
Split: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split

Reverse: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse

Join: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join 
      

-----------------------------------------------------------------------------------------
Day 3
-----------------------------------------------------------------------------------------
let sum = 0;
    
for (let i = 0; i <= 20; i++) {
        
	if (i % 2 == 1) {
            
		sum = sum + i;
            
	}
}
    
console.log(sum);
    
    
let i = 0, value = 0;
    
while (i <= 20) {
        
	if (i % 2 != 0) {
            
		value = value + i;
            
	}
       	
	console.log(value)
    i++;
}
>>>>>>>>>

let temp = "";
    
for (let i = input.length - 1; i >= 0; i--) {
  
  temp = temp + input[i];
  
}

console.log(temp);

>>>>>>>>>
      
      
>>>>>>>>>>
      
      
// split => String
    // reverse => Array
    // join => Array
    
    
    // Split => String
    
    // let a = "guvi";
    
    // console.log(a.split("")) //=> ["g", "u", "v", "i"]
    
    // Reverse  => Array
    
    // let a = ["a", "b", "c"];
    
    // console.log(a.reverse()); // ["c", "b", "a"]
    
    // Join => Array
    
    // let a = ["a", "b", "c"];
    
    // console.log(a.join(""))
    
    
    // "guvi" => ivug
    
    
    // let splitValue = input.split("");
    
    // let reverseValue = splitValue.reverse();
    
    // let joinValue = reverseValue.join("");
    
    console.log(input.split("").reverse().join(""));
      
>>>>>>>>>>>>>>>>
      
      
>>>>>>>>>>>>>>>>>Palindrome>>>>>>>>>>>>>>>>>>.
      

      
    let reverseValue = input.split("").reverse().join("");
    
    if (input == reverseValue) {
        
        console.log(input, "is a Palindrome");
        
    } else {
        
        console.log(input, "is not a Palindrome");
        
    }

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>      
      
1)  console.log(add([2, 1, 3, 11])) // 17

2)
  *
  **
  ***
  ****
  *****
      
      // repeat
3) 123 => 6

Ref: while, Math Method (ceil, floor)

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math  


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  
Day 4

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
      
      
//   *****
//   ****
//   ***
//   **
//   *


    for (let i = 5; i >= 1; i--) {
        
        let star = "";
        
        for (let j = i; j >= 1; j--) {
            
            star = star + "*";
            
        }
        
        console.log(star);
        
    }
    
    
    for (let i = 5; i >= 0; i--) {
        
        console.log(str.repeat(i));
    }
  
// console.log(Math.ceil(10.1)); => 11
    
    // console.log(Math.round(10.3)); => 10
    
    // console.log(Math.round(10.6)); => 11
    
    // console.log(Math.floor(10.8)); => 10
    
    // 123 => 123 % 10 => 3 / Math.floor(123 / 10) => 12 
    
    // 12 => 12 % 10 => 2 / Math.floor(12 / 10) => 1
    
    // 1 => 1 % 10 => 1 / Math.floor(1 / 10) => 0
    
    // let input = 123;
    
    // let sum = 0;
    
    // while (input != 0) {
        
    //     sum = sum + (input % 10);
        
    //     input = Math.floor(input / 10);
        
    // }
    
    // console.log(sum);
    
    
    let input = "123";
    
    let sum = 0;
    
    for (let i = 0; i < input.length; i++) {
        
        sum = sum + Number(input[i])
        
    }
    
    console.log(sum)

https://pythontutor.com/visualize.html#mode=display

Math Method: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math

Math.round(0.2) => 0
    
Math.round(0.49) => 0

Math.round(0.5) => 1

Math.round(0.9) => 1


Math.ceil(0.2) => 1

Math.ceil(0.49) => 1

Math.ceil(0.5) => 1

Math.ceil(0.9) => 1



Factorial of N

// Factorial 5
    
    // 5 * 4 * 3 * 2 * 1
    
    // 1 * 2 * 3 * 4 * 5
    
    // let n = 5;
    
    // let fact = 1;
    
    // for (let i = 1; i <= n; i++) {
        
    //     fact = fact * i;
        
    // }
    
    // console.log(fact);
    
    let n = 5;
    
    let fact = 1;
    
    while (n > 0) {
        
        fact = fact * n;
        
        n--;
        
    }
    
    console.log(fact);
                          
Assesment

1. Code Keta first 10 Problem (Input / Output) Must

2. Fibonnanci Series => 5 => 0 + 1 + 1 + 2 + 3 + 5 + 8 => 20 
      

>>>>>>>>>>>> Fibonnanci >>>>>>>>>>>>>>>>>>>>>>>>
     let fibo = [0 , 1];
    
    for (let i = 0; i < 5; i++) {
        
        let value = fibo[i] + fibo[i+1];
        
        fibo.push(value);
        
    }
    
    let sum = 0;
    
    for (let i = 0; i < fibo.length; i++) {
        
        sum = sum + fibo[i]
        
    }
    console.log(fibo);
    console.log(sum);
  
Fibonnanci - 2
                          
	let firstValue = 0;
    
    let secondValue = 1;
    
    console.log(firstValue);
    
    console.log(secondValue);
    
    for (let i = 0; i < 5; i++) {
        
        let value = firstValue + secondValue;
        
        console.log(value);
        
        firstValue = secondValue;
        
        secondValue = value;
        
    }  
                          
https://www.programiz.com/javascript/examples/fibonacci-recursion                          

                          
Neon:
                          
function isNeon(value) {
        
        let squareValue = Math.pow(9, 2);
        
        let sum = 0;
        
        while (squareValue > 0) {
            
            const digit = squareValue % 10;
            
            sum = sum + digit;
            
            const roundValue = Math.floor(squareValue / 10);
            
            squareValue = roundValue;
            
        }
        
        return sum == value;
        
    }
    
    console.log(isNeon(input) ? `${input} is a Neon Number` : `${input} is not a Neon Number`);

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>      
      
// Date      

console.log(new Date(2023, (userInput[0]), 0).getDate());
      
(value % 4 == 0) && (value % 100 != 0 || value % 400 == 0)   
  
Article: https://airandspace.si.edu/stories/editorial/science-leap-year#:~:text=The%20rule%20is%20that%20if,skipped%20is%20the%20year%202100.
                          
Date Method in Javascript: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date                          
                          
// HCF
                          
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
    
    let splitValues = userInput[0].split(" ");
    
    let a = splitValues[0];
    
    let b = splitValues[1];
    
    let hcf;
    
    let minimum = Math.min(a, b);
    
    for (let i = 0; i <= minimum; i++) {
        
        if (a % i == 0 && b % i == 0) {
            
            hcf = i;
            
        }
        
    }

    console.log(hcf.toFixed(2));
  
  
});  
                                
// console.log(new Date(2023, (userInput[0]), 0).getDate());  
                                
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date                                
